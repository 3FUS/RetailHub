name: Build main.exe with PyInstaller

on:
  push:
    branches:
      - main  # 当推送到 main 分支时触发
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: windows-latest  # 使用 Windows 环境
    name: Build EXE for Windows

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'  # 指定 Python 版本

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install --only-binary=JPype1 JPype1
          pip install -r requirements.txt

      - name: Build EXE with PyInstaller
        run: |
          # 获取Java安装路径
          $JAVA_HOME = $env:JAVA_HOME
          Write-Host "JAVA_HOME: $JAVA_HOME"

          # 构建PyInstaller命令
          $pyinstallerCmd = "python -m PyInstaller --onefile --hidden-import=aiomysql --hidden-import=pyodbc --add-data=`"app/core/lib;app/core/lib`""

          # 添加Java运行时库
          if ($JAVA_HOME -and (Test-Path $JAVA_HOME)) {
            $jreLibPath = Join-Path $JAVA_HOME "lib"
            $jreBinPath = Join-Path $JAVA_HOME "bin"
            $jreBinServerPath = Join-Path $jreBinPath "server"

            if (Test-Path $jreLibPath) {
              $pyinstallerCmd += " --add-data=`"$jreLibPath;java/lib`""
            }
            if (Test-Path $jreBinPath) {
              $pyinstallerCmd += " --add-data=`"$jreBinPath;java/bin`""
            }
            if (Test-Path $jreBinServerPath) {
              $pyinstallerCmd += " --add-data=`"$jreBinServerPath;java/bin/server`""
            }
          }

          $pyinstallerCmd += " main.py"
          Write-Host "Running command: $pyinstallerCmd"
          Invoke-Expression $pyinstallerCmd
      

      - name: Archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: main-exe
          path: dist/main.exe
